
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.12.35707.178 d17.12
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ProjectPOB2421", "ProjectPOB2421\ProjectPOB2421.csproj", "{16B05604-3A4F-4DF9-8653-04BF72B99D98}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{16B05604-3A4F-4DF9-8653-04BF72B99D98}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{16B05604-3A4F-4DF9-8653-04BF72B99D98}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{16B05604-3A4F-4DF9-8653-04BF72B99D98}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{16B05604-3A4F-4DF9-8653-04BF72B99D98}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection 

	public class User
{
    public int Id { get; set; }
    public string Name { get; set; }
    public int Age { get; set; }
} 
 
using Microsoft.EntityFrameworkCore;

public class ApplicationDbContext : DbContext
{
    public DbSet<User> Users { get; set; }  // DbSet для работы с таблицей Users

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlite("Data Source=users.db"); // Используем SQLite
    }
} 
 using System;
using System.Linq;

class Program
{
    static void Main()
    {
        using (var context = new ApplicationDbContext())
        {
            context.Database.EnsureCreated(); // Создание базы данных, если ее нет

            // Добавление нового пользователя
            var newUser = new User { Name = "Алексей", Age = 25 };
            context.Users.Add(newUser);
            context.SaveChanges();

            // Чтение всех пользователей
            var users = context.Users.ToList();
            foreach (var user in users)
            {
                Console.WriteLine($"ID: {user.Id}, Имя: {user.Name}, Возраст: {user.Age}");
            }
        }
    }
} 
 
using System.Collections.ObjectModel;
using System.Linq;

public class MainViewModel
{
    public ObservableCollection<User> Users { get; set; } = new ObservableCollection<User>();

    public MainViewModel()
    {
        LoadUsers();
    }

    private void LoadUsers()
    {
        using (var context = new ApplicationDbContext())
        {
            var users = context.Users.ToList();
            foreach (var user in users)
            {
                Users.Add(user);
            }
        }
    }
}

